--- 
import { FUIEmailAddress } from '@ferment-ui/web-components';

interface Props {
	title: string;
}

const { title } = Astro.props;

const pages = [
  {
    title: 'About',
    href: '/about',
  },
  {
    title: 'Resumé',
    href: '/resume',
  }
];

const pathname = new URL(Astro.request.url).pathname;
---

<!DOCTYPE html>
<html lang="en" class='no-js'>
	<head>
		<meta charset="UTF-8" />
		<title>Alex Gagnon | {title}</title>
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="description" content="Personal site for Alex Gagnon">
    <script is:inline>
      document.documentElement.classList.remove('no-js');
      document.documentElement.classList.add('js');

      // this 'hides' the document until things are loaded to reduce CLS
      document.documentElement.classList.add('v-hidden');

      const fonts = [
        new FontFace('Playfair Display', 'url(/fonts/PlayfairDisplay-Italic-subset.woff2) format("woff2")', {style: 'italic', weight: '400', unicodeRange: 'U+20-7E,U+C9,U+E9', display: "swap"}),
        new FontFace('Bricolage Grotesque', 'url(/fonts/BricolageGrotesque-Regular-subset.woff2) format("woff2")', {style: 'normal', weight: '400', unicodeRange: 'U+20-7E,U+C9,U+E9', display: "swap"}),
        new FontFace('Handjet', 'url(/fonts/Handjet-Regular-subset.woff2) format("woff2")', {style: 'normal', weight: '400', unicodeRange: 'U+41,U+47,U+61,U+65,U+67,U+6C,U+6E,U+6F,U+78', display: "swap"}),
      ];

      fonts.forEach(font => document.fonts.add(font));

      const isFontsLoaded = Promise.allSettled(fonts.map(font => font.load()))
        .then(fonts => {
          document.documentElement.classList.add('fonts-loaded');
        })
        .catch(console.error);

      const isDCL = new Promise(function(resolve) {
        document.addEventListener("DOMContentLoaded", resolve, false);
      })

      // wait for both fonts and DOM content to be loaded to reduce CLS
      Promise.allSettled([isFontsLoaded, isDCL]).then(function() {
        document.documentElement.classList.remove('v-hidden');
      });
    </script>
		<meta name="generator" content={Astro.generator} />
    <slot name='styles'></slot>
	</head>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
  
    gtag('config', 'G-4294VBW15L');
  </script>
	<body>
    <a href='#main' class='v-on-pin a-center'>Skip to main content</a>
    <header role="banner">
      <div class="a-end ai-center mt mb"><FUIEmailAddress user="xela" domain="aidem.danom" /><a href="https://github.com/alexgagnon"><i data-lucide="github" class='tappable'></i><span class="sr-only">Github</span></a></div>
      <nav>
        <ul>
          <li id="logo"><a href="/" class:list={['fs-h2', 'ff-display', {'active': '/' === pathname}]}>Alex Gagnon</a></li>
          <li id="menu">
            <button id="menu-toggle" class="tt-uppercase tappable" aria-haspopup="true" aria-expanded="false">Menu</button>
            <ul id="menu-items">
              {pages.map(({title, href}) => <li><a href={href} class:list={['tappable', {'active': href === pathname}]}>{title}</a></li>)}
            </ul>
          </li>
        </ul>
      </nav>
    </header>
    <main id="main" class="page">
      <slot />
    </main>
    <footer>
      <p class='fs-h5'>© {new Date().getFullYear()} | Alex Gagnon</p>
    </footer>
	</body>
</html>

<script>
  import {computePosition, shift} from "@floating-ui/dom";
  import {createIcons, ExternalLink, Github} from 'lucide';
  import Hotjar from '@hotjar/browser';

  const siteId = 3634675;
  const hotjarVersion = 6;

  Hotjar.init(siteId, hotjarVersion);

  const menuToggle = document.getElementById('menu-toggle');
  const menuItems = document.getElementById('menu-items');

  menuToggle?.addEventListener('click', () => {
    const isExpanded = menuToggle.getAttribute('aria-expanded') === 'true';
    menuToggle.setAttribute('aria-expanded', !isExpanded);
    update();
  });

  function update() {
    computePosition(menuToggle, menuItems, {
      placement: 'bottom-end',
      middleware: [
        shift(),
      ]
    }).then(({x, y}) => {
      menuItems.style.left = `${x}px`,
      menuItems.style.top = `${y}px`
    });
  }
    
  createIcons({
    icons: {
      ExternalLink,
      Github
    }
  })
</script>

<style>
  body {
    min-height: 100vh;
    min-height: 100dvh;
    display: grid;
    grid-template-areas:
      "header"
      "main"
      "footer";
    grid-template-rows: auto 1fr auto;
    font-family: var(--font-family-body);
  }

  [role="banner"] {
    grid-area: header;
    width: 100%;
    padding: 0 1rem;
  }

  [role="banner"] ul {
    display: flex;
    align-items: stretch;
  }

  [role="banner"] nav {
    width: 100%;
  }

  [role="banner"] a {
    text-decoration: none;
    padding: 0 2rem;
  }

  #logo {
    grid-area: logo;
    margin-right: auto;
  }

  #menu {
    grid-area: menu;
    display: flex;
    position: relative;
  }

  #menu li {
    display: flex;
    align-items: stretch;
  }

  #menu a {
    display: flex;
    align-items: center;
    width: 100%;
    text-transform: uppercase;
  }

  #menu-items {
    display: none;
    background: white;
    width: max-content;
    position: absolute;
    border: 1px solid currentColor;
  }

  #menu-toggle[aria-expanded=true] + #menu-items {
    display: flex;
    flex-direction: column;
  }

  @media (min-width: 768px) {
    #menu-toggle {
      display: none;
    }

    #menu-items {
      display: flex;
      flex-direction: row !important;
      position: static;
      border: 0;
      
    }
  }

  a.active {
    /* border-bottom: 2px solid currentColor; */
  }
</style>

<style is:global>
  :root {
    --spacing-base: 1rem;
    --spacing-responsive: clamp(var(--spacing-base), 5%, 4rem);
    --font-scale: 1.2;
    --font-scale-start: 1rem;
    --font-size-h6: var(--font-scale-start);
    --font-size-h5: calc(var(--font-scale) * var(--font-size-h6));
    --font-size-h4: calc(var(--font-scale) * var(--font-size-h5));
    --font-size-h3: calc(var(--font-scale) * var(--font-size-h4));
    --font-size-h2: calc(var(--font-scale) * var(--font-size-h3));
    --font-size-h1: calc(var(--font-scale) * var(--font-size-h2));
    --font-family-body: sans-serif;
    --font-family-heading: serif;
    --font-family-display: serif;
    --br: 4px;
    --border: 2px solid currentColor;
    --S-card: var(--spacing-responsive);
  }

  .no-fonts-loaded body {
    visibility: hidden;
  }

  .fonts-loaded {
    --font-family-body: 'Bricolage Grotesque', sans-serif;
    --font-family-heading: 'Playfair Display', serif;
    --font-family-display: 'Handjet', serif;
  }

  @media (min-width: 768px) {
    :root {
      --font-scale: 1.33;
    }
  }

  * {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
  }

  *:focus {
    outline: 2px dashed currentColor;
  }

  [class*="-on-"] {
    transition: 0.2s ease-in-out;
  }

  .tappable {
    cursor: pointer;
    min-height: 44px;
    min-width: 44px;
  }

  body {
    line-height: 1.8;
  }

  ul {
    list-style-type: none;
    list-style-position: inside;
  }

  .lst-none {
    list-style-type: none;
  }

  .lst-disc {
    list-style-type: disc;
  }

  h1, .h1, h2, .h2, h3, .h3, h4, .h4, h5, .h5, h6, .h6 {
    font-family: var(--font-family-heading);
  }

  h1, .h1 {
    font-size: var(--font-size-h1);
  }

  h2, .h2 {
    font-size: var(--font-size-h2);
  }

  h3, .h3 {
    font-size: var(--font-size-h3);
  }

  h4, .h4 {
    font-size: var(--font-size-h4);
  }

  h5, .h5 {
    font-size: var(--font-size-h5);
  }

  h6, .h6 {
    font-size: var(--font-size-h6);
  }

  .ff-body {
    font-family: var(--font-family-body);
  }

  .ff-display {
    font-family: var(--font-family-display);
  }

  .subheading {
    font-size: var(--font-size-h5);
    font-weight: 700;
  }

  .fs-body {
    font-size: var(--font-size-body);
  }

  .fs-h1 {
    font-size: var(--font-size-h1);
  }

  .fs-h2 {
    font-size: var(--font-size-h2);
  }

  .fs-h3 {
    font-size: var(--font-size-h3);
  }

  .fs-h4 {
    font-size: var(--font-size-h4);
  }

  .fs-h5 {
    font-size: var(--font-size-h5);
  }

  .fs-h6 {
    font-size: var(--font-size-h6);
  }

  .italic {
    font-style: italic;
  }

  .bold {
    font-weight: 700;
  }

  .tt-uppercase {
    text-transform: uppercase;
  }

  h1 + p, .h1 + p, h2 + p, .h2 + p, h3 + p, .h3 + p, h4 + p, .h4 + p, h5 + p, .h5 + p, h6 + p, .h6 + p, p + * {
    margin-top: var(--spacing-base);
  }

  .a-row {
    flex-direction: row;
  }

  .a-column {
    flex-direction: column;
  }

  .a-start {
    display: flex;
    justify-content: flex-start;
  } 

  .a-end {
    display: flex;
    justify-content: flex-end;
  }

  .a-center {
    display: flex;
    justify-content: center;
  }

  .ai-center {
    align-items: center;
  }

  .jc-center {
    justify-content: center;
  }

  .l-start {
    display: grid;
    place-content: start;
  }

  .l-end {
    display: grid;
    place-content: end;
  }

  .l-center {
    display: grid;
    place-content: center;
    height: 100%;
  }

  .g {
    gap: var(--spacing-base);
  }

  .g-responsive {
    gap: var(--spacing-responsive);
  }

  .m {
    margin: var(--spacing-base);
  }

  .mt-responsive {
    margin-top: var(--spacing-responsive);
  }

  .mt {
    margin-top: var(--spacing-base);
  }

  .mb-responsive {
    margin-bottom: var(--spacing-responsive);
  }

  .mb {
    margin-bottom: var(--spacing-base);
  }

  .static {
    position: static;
  }

  .relative {
    position: relative;
  }

  .absolute {
    position: absolute;
  }

  .block {
    display: block;
  }

  .inline-block {
    display: inline-block;
  }

  .inline {
    display: inline;
  }

  .none {
    display: none
  }

  .flex {
    display: flex;
  }

  .fd-column {
    flex-direction: column;
  }

  .fd-row {
    flex-direction: row;
  }

  .page {
    max-width: 65rem;
    padding: 1.5rem clamp(1rem, 5%, 3rem);
    margin: 0 auto;
  }

  main {
    grid-area: main;
    display: flex;
    flex-direction: column;
    justify-content: stretch;
  }

  footer {
    grid-area: footer;
  }

  a {
    color: inherit;
  }

  .lucide-external-link {
    margin-left: 0.5rem;
    padding-top: 0.2rem;
  }

  button, .btn {
    display: inline-block;
    padding: 1rem 2rem;
    border: var(--border);
    text-decoration: none;
  }

  .float-on-pin:hover,
  .float-on-pin:focus {
    box-shadow: 0 4px 4px 2px currentColor;
    transform: translateY(-4px);
  }

  .v-hidden {
    visibility: hidden;
  }

  .v-on-pin {
    position: absolute;
    top: -100vh;
    width: 100%;
  }

  .v-on-pin:focus,
  .v-on-pin:hover {
    top: 0;
  }

  .sr-only	{
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }

  .not-sr-only	{
    position: static;
    width: auto;
    height: auto;
    padding: 0;
    margin: 0;
    overflow: visible;
    clip: auto;
    white-space: normal;
  }

  .fancy-button {
    border: 2px solid black;
    background: rgb(131,58,180);
    background: linear-gradient(56deg, rgba(131,58,180,1) 0%, rgba(253,29,29,1) 50%, rgba(252,176,69,1) 100%);
    text-decoration: none;
    padding: 0.5rem 1rem;
    transition: 0.2s ease-in-out;
  }

  .fancy-button:hover,
  .fancy-button:focus {
    background: linear-gradient(56deg, white 0%, white 100%);
  }
</style>
