---
import Layout from '../layouts/Layout.astro';
import {FUICard} from '@ferment-ui/web-components';

enum SKILLS {
  Astro = "Astro",
  Azure = "Azure",
  Azure_DevOps = "Azure DevOps",
  C_Sharp = "C#",
  Cloudflare = "Cloudflare",
  Docker = "Docker",
  Eleventy = "11ty",
  Git = "Git",
  Github_Actions = "Github Actions",
  Github_Pages = "Github Pages",
  HTML_CSS = "HTML/CSS",
  Java = "Java",
  Jenkins = "Jenkins",
  JS_TS = "JS/TS",
  Linux = "Linux",
  Lit = "Lit",
  MongoDB = "MongoDB",
  Postgres = "Postgres",
  Python = "Python",
  Redis = "Redis",
  REST = "RESTful APIs",
  Rust = "Rust",
  Terraform = "Terraform",
  VueJS = "VueJS",
  Windows = "Windows",
  Wordpress = "Wordpress",
}

const skills = {
  "Specializations": "Front-end development, DevOps,  Cloud Architecture",
  "Languages": "JS/TS (browser and Node.js), HTML/CSS, Java, Python, C#, Rust, Shell, SQL",
  "Cloud providers": "Azure",
  "IaC": "Terraform",
  "Frameworks and libraries": "Spring, ExpressJS, Lit, ReactJS, VueJS, Astro, 11ty",
  "APIs": "RESTful, GraphQL",
  "Databases": "MySQL/PostgreSQL, ElasticSearch, MongoDB, Redis",
  "Containerization": "Docker",
  "CI/CD": "Azure DevOps, Github Actions",
  "SCM": "Git",
  "OSs": "Linux, Windows",
}
const otherSkills = [
  "Agile and Test Driven Development",
  "Strong people management skills",
  "Effective when working in a team environment and independently",
  "Excellent in problem solving and communication",
  "Quick at learning new concepts",
];

const experiences = [
  {
    employer: "Economic and Social Development Canada",
    roles: [
      {
        title: "Technical Lead",
        project: "WCMS",
        date: "2020 - Present",
        text: "Responsibilities include managing a multi-disciplinary team, helping to architect and develop the application, creating SDLC documentation, and reporting to senior management on technical issues and potential solutions. As Team Lead, I tend to the day-to-day needs of my team, assign work tickets, help with debugging and requirement analysis, promote best practices, and complete performance reviews. As technical advisor I work on the project directly, which is a multidimensional and cloud-native application, consisting of many different services provided by the Azure platform (for example, Storage Account, Frontdoor, Application Gateway, App Service, etc.). I lead the development of the DevOps strategy using Azure DevOps as our CI/CD tool, and Terraform for Infrastructure as Code to deploy Azure services in a maintainable fashion. I also work with other technical advisors and representatives from other teams (development teams, Cloud, and IT Security), to ensure that our solution is robust, secure, maintainable, and re-usable by other applications in the future.",
        skills: [SKILLS.JS_TS, SKILLS.Lit, SKILLS.HTML_CSS, SKILLS.Java, SKILLS.Spring, SKILLS.Git, SKILLS.Terraform, SKILLS.Docker, SKILLS.Git, SKILLS.Azure_DevOps, SKILLS.Azure, SKILLS.PostgreSQL, SKILLS.Redis, SKILLS.Windows],
        additional: "Azure services used: DNS, Frontdoor, App Gateway, App Service, Functions, Storage Account, Cognitive Search"
      }
    ]
  },
  {
    employer: "Monad Media",
    roles: [
      {
        title: "Founder & Full Stack Developer",
        date: "2019 - Present",
        text: "IT agency specializing in web and business services for SMBs and non-profits.",
        skills: [SKILLS.JS_TS, SKILLS.HTML_CSS, SKILLS.Lit, SKILLS.Postgres, SKILLS.Azure, SKILLS.Git, SKILLS.Github_Pages, SKILLS.Github_Actions, SKILLS.Cloudflare, SKILLS.Wordpress, SKILLS.Linux]
      }
    ]
  },
  {
    employer: "Health Canada",
    roles: [
      {
        title: "Technical Advisor",
        project: "Quarantine Case Management System",
        date: "March 2020 - June 2021",
        text: "Aided with cloud and data architecture and DevOps and led the development of RESTful APIs used to ingest and disseminate confidential COVID-19 related traveller data between numerous stakeholders (CBSA, PHAC, COVID-19 testing laboratories, provincial/territorial health ministries). QCMS was one of the highest priority activities for the organization, and as such had extremely tight deadlines and oversight from senior management. Required multiple standups/meetings daily with different stakeholders for requirement gathering, communicating API schemas between parties, and discussing cloud service performance and security.",
        skills: [SKILLS.Azure, SKILLS.REST, SKILLS.Terraform, SKILLS.C_Sharp, SKILLS.Git],
        additional: "Azure services used: Data Factory, Event Grid, APIM",
      },
      {
        title: "Technical Lead",
        project: "Health Products and Food",
        date: "April 2018 - June 2021",
        text: "Led a team of up to 8 developers in developing and maintaining applications using various technologies such as HTML, CSS, JavaScript, Java, Struts, Spring, C#, .NET, Electron, OracleDB, Gradle, Docker, Jenkins, SonarQube, and Git/Github in an Agile environment. Developed and/or maintained a portfolio of 20+ web applications and RESTful APIs, where duties involve communicating with clients, architecting and developing solutions and DevOps strategies, analyzing requirements, providing recommendations to senior management, creating SDLC documentation, assigning and tracking progress using tickets, and leading bi-weekly stand-ups. A notable example of an application the team developed is Small Business Registry, a distributed application consisting of two websites, APIs, ETLs, and databases across multiple lines of business, whose architecture was used as a baseline for subsequent applications. Also acted as a mentor for students and new developers, helping onboard them to the team and becoming more proficient with advanced programming concepts and best practices.",
        skills: [SKILLS.JS_TS, SKILLS.HTML_CSS, SKILLS.Java, SKILLS.C_Sharp, SKILLS.Azure_DevOps, SKILLS.Jenkins, SKILLS.Git, SKILLS.Terraform, SKILLS.Git, SKILLS.PostgreSQL, SKILLS.Linux],
      },
      {
        title: "Senior Programmer Analyst",
        project: "Pesticide Management",
        date: "April 2016 - April 2018",
        text: "Created software that aids international pesticide production companies and regulatory bodies in the transmission of product information using a globally standardized specification managed by the OECD. The technologies used were Electron, AngularJS/VueJS, MongoDB, HTML, and CSS. Led the development of a VueJS design system that was re-used throughout the application. Developed RESTful APIs meeting Treasury Board of Canada Web API standards for data on pesticides using various technologies including Tomcat, Java (Jersey), C# (.NET), and Oracle DB. Developed the user-facing web application for pesticide information using JavaScript, HTML, CSS, and jQuery. ",
        skills: [SKILLS.JS_TS, SKILLS.HTML_CSS, SKILLS.VueJS, SKILLS.MongoDB, SKILLS.Git, SKILLS.Linux],
      }
    ]
  },
  {
    employer: "Carleton University",
    roles: [
      {
        title: "Teaching Assistant",
        date: "September 2015 - April 2017",
        text: "Provided assistance to professors teaching programming courses at the undergraduate level. Worked with a team of teaching assistants to lead tutorials and offer assistance during office hours. Courses include Systems Programming, Object-Oriented Programming, and Introduction to Computer Science Levels I and II. Other duties included marking assignments, proctoring exams, and communicating issues to professors. Won Teaching Assistant of the Year award for the School of Computer Science.",
        skills: [SKILLS.JS_TS, SKILLS.HTML_CSS, SKILLS.Java, SKILLS.Python, SKILLS.Linux],
      }
    ]
  }
]

const openSource = [
  {
    title: "Ferment UI",
    role: "Creator/Maintainer",
    text: "A collection of web components integrated with a variable's based utility CSS framework, built with Lit and PostCSS.",
    skills: [SKILLS.JS_TS, SKILLS.HTML_CSS, SKILLS.Lit, SKILLS.Astro, SKILLS.Github_Pages],
  },
  {
    title: "PostCSS",
    role: "Contributor",
    text: "Updated the postcss-custom-media package to support PostCSS@8.",
    skills: [SKILLS.JS_TS]
  },
  {
    title: "rtrie",
    role: "Creator/Maintainer",
    text: "Generalized radix Trie implementation useful for fast lookups in very large collections.",
    skills: [SKILLS.Python]
  },
  {
    title: "jbzip2",
    role: "Creator/Maintainer",
    text: "Fast transformer of ndjson or json arrays (i.e. wikidata), using libjq and libbzip2.",
    skills: [SKILLS.Rust]
  }
];

const education = [
  {
    title: "Masters of Computer Science",
    school: "Carleton University",
    date: "September 2019 - Present",
    text: "Specialization in Big Data Management and Machine Learning. Courses include reviewing emerging technologies in retrieval, processing algorithms, storage of big data, security, and knowledge representation. Thesis includes researching the performance of different data structures for storing and retrieving large corpora of entity labels.",
  },
  {
    title: "Bachelor of Computer Science",
    school: "Carleton University",
    date: "September 2014 - December 2016",
    text: "Focus in AI, algorithms, data structures, and programming paradigms. Completed projects involving analysis of bitcoin blockchain mechanics and networked Java applications (including concepts such as state machines, TDD, and networking)",
    highlights: ["CGPA: 11.1/12", "Dean's Honour List"]
  },
  {
    title: "Bachelor of Science",
    school: "University of Ottawa",
    date: "September 2006 - December 2012",
    text: "Double major in Biology and Psychology.",
    highlights: ["Received merit scholarship for 3rd and 4th year of studies."],
  }
];

const certifications = [
  {
    title: "Terraform Associate",
    date: "September 2023 (expected)",
  },
  {
    title: "Azure Administrator",
    date: "September 2023 (expected)",
  },
  {
    title: "Microsoft Security, Compliance, and Identity Fundamentals",
    date: "July 2022"
  },
  {
    title: "Professional ScrumMaster, Level I",
    date: "August 2018"
  },
  {
    title: "Oracle Certified Associate, Java SE 8 Programmer",
    date: "February 2014"
  }
];

const awards = [
  {
    title: "Rookie Developer of the Year",
    employer: "Health Canada",
    date: "2017"
  },
  {
    title: "Teaching Assistant of the Year",
    employer: "Carleton University",
    date: "2016"
  },
]
---

<Layout title="Resume">
  <div class="page">
    <h1>Resume</h1>
    <div class='flex g mb'>
      <button id="open-all">Open all</button>
      <button id="close-all">Close all</button>
    </div>
    <details>
      <summary><h2 class="h4 inline">Skills</h2></summary>
      <div>
        <p class="mt mb">Listed in order of experience from left to right.</p>
        <dl>
          {Object.entries(skills).map(([key, value]) => (
            <div class='mb'>
              <dt>{key}</dt>
              <dd>{value}</dd>
            </div>
          ))}
        </dl>
        <ul>
          Additional skills:
          {otherSkills.map(skill => (
            <li>{skill}</li>
          ))}
        </ul>
      </div>
    </details>
    <details>
      <summary><h2 class="h4 inline">Experience</h2></summary>
      <div id='experiences' class='flex fd-column g-responsive mt'>
        {experiences.map(({employer, roles}) => 
          <FUICard>
            <h3>{employer}</h3>
            {roles.map(({title, project, date, text, highlights, skills, additional}) => <>
              <p class='subheading'>{title}</p>
              {project && <p>{project}</p>}
              <p>{date}</p>
              <p>{text}</p>
              {highlights && <ul>
                highlights.map(highlight => <li>{highlight}</li>)
              </ul>}
              <p><strong>Technologies:</strong>&nbsp;{skills.join(", ")}</p>
              {additional ?? <p>{additional}</p>}
            </>)}
          </FUICard>
        )}
      </div>
    </details>
    <details>
      <summary><h2 class="h4 inline">Education</h2></summary>
      <div class='flex fd-column g-responsive mt'>
        {education.map(({title, school, date, text, highlights, additional}) => (
          <FUICard>
            <h3>{title}</h3>
            <p class='subheading'>{school}</p>
            <date>{date}</date>
            <p>{text}</p>
            {highlights && (
              <ul>
                {highlights.map(item => (
                  <li>{item}</li>
                ))}
              </ul>
            )}
          </FUICard>
        ))}
      </div>
    </details>
    <details>
      <summary><h2 class="h4 inline">Open Source</h2></summary>
      <div class='flex fd-column g-responsive mt'>
        {openSource.map(({title, date, text, skills}) => (
          <FUICard>
            <h3>{title}</h3>
            <p class='subheading'>{date}</p>
            <p>{text}</p>
            <p><strong>Technologies:</strong>&nbsp;{skills.join(", ")}</p>
          </FUICard>
        ))}
      </div>
    </details>
    <details>
      <summary><h2 class="h4 inline">Certifications</h2></summary>
      <div class='flex fd-column g-responsive mt'>
        {certifications.map(({title, date}) => (
          <FUICard>
            <h3>{title}</h3>
            <p>{date}</p>
          </FUICard>
        ))}
      </div>
    </details>
    <details>
      <summary><h2 class="h4 inline">Awards</h2></summary>
      <div class='flex fd-column g-responsive mt'>
        {awards.map(({title, employer, date}) => (
          <FUICard>
            <h3>{title}</h3>
            <p class='subheading'>{employer}</p>
            <p>{date}</p>
          </FUICard>
        ))}
      </div>
    </details>
  </div>
</Layout>

<style>
  details {
    margin-bottom: var(--spacing-responsive);
  }

  summary {
    cursor: pointer;
    vertical-align: middle;
  }

  h2 {
    vertical-align: middle;
  }

  dt {
    font-weight: bold;
  }

  dt::after {
    content: ':';
    display: inline-block;
    margin-right: 0.5rem;
  }

  dt, dd {
    display: inline-block;
  }

  ul {
    list-style-type: disc;
  }
</style>

<script>
  const openAll = document.getElementById('open-all');
  const closeAll = document.getElementById('close-all');
  const details = document.querySelectorAll('details');

  openAll.addEventListener('click', () => {
    details.forEach(detail => {
      detail.open = true;
    });
  });

  closeAll.addEventListener('click', () => {
    details.forEach(detail => {
      detail.open = false;
    });
  });
</script>